//- блок навигации (горизонтальный или вертикальный)

mixin navigation(options, layout)

  ul(class = `menu__layout menu__layout--${layout}`)
    each item in options
      +menuItem(item, layout)

  button.menu-mobile
    span.menu-mobile__decorate

//- пункт меню

//-
  options.title: заголовок пункта меню;
  options.link: ссылка пункта меню "/some-address/change-me";
  options.layout: раскладка меню horizontal/vertical;
  options.style: определяет наличие иконки в правой части:
                "" - без иконки,
                dropdown - стрелочка вниз (для дропдаунов);
  option.isDifferent: добавляет отличные от прочих стили к пункту меню (bold);
  ????options.expanded: меняет стиль при разворачивании инпута - true или отсутствует;
  ????options.ariaLabel: содержание атрибута aria-label для скринридеров;

mixin menuItem(options, layout)
  - const {title, link, style, isDifferent, submenuArr = [],} = options
  - let linkStyle = 'menu-item__link';

  if (isDifferent)
    - linkStyle= `${linkStyle} ${linkStyle}--different`;

  li(class = `menu-item menu-item--${layout}`)
    if (style!== 'dropdown')
      a(class = linkStyle href = link)= title
    else
      - linkStyle = 'menu-item__btn';
      button(class = linkStyle type = "button" ariaLabel = "submenu")= title
        i.material-icons expand_more
      ul(class = `menu__layout--vertical submenu submenu--close`)
        each item in submenuArr
          +submenu(item)


  mixin submenu(options = [], level = '1')
    - const {title, link, style, isDifferent} = options
    - let linkStyle = 'menu-item__link menu-item__link--submenu';

    if (isDifferent)
      - linkStyle= `${linkStyle}--different`;

    li(class = `menu-item menu-item--submenu`)
      if (style!== 'dropdown')
        a(class = linkStyle href = link)= title
      else
        - linkStyle = 'menu-item__btn menu-item__btn--submenu';
        button(class = linkStyle type = "button" ariaLabel = "submenu")= title
          i.material-icons chevron_right